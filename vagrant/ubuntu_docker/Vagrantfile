# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"
TIMEZONE = "Europe/Helsinki"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "ubuntu/trusty64"

  config.vm.define "node1", primary: true do |node1|
    node1.vm.network :private_network, ip: "10.10.10.30"
    node1.vm.hostname = "node1"
  end
  config.vm.define "node2", autostart: false do |node2|
    node2.vm.network :private_network, ip: "10.10.10.40"
    node2.vm.hostname = "node2"
  end

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "../../dockerfiles/", "/home/vagrant/dockerfiles"
  config.vm.synced_folder "../../maestro/", "/home/vagrant/maestro"
  config.vm.synced_folder "../../weave/", "/home/vagrant/weave"
  config.vm.synced_folder "~/Projects/", "/home/vagrant/Projects"

  config.vm.provider :virtualbox do |vb|
    # Use VBoxManage to customize the VM. For example to change memory:
    vb.customize ["modifyvm", :id, "--memory", "2048"]
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
  end

  # Set the timezone
  config.vm.provision :shell, :inline => "echo \""+TIMEZONE+"\" | sudo tee /etc/timezone && dpkg-reconfigure --frontend noninteractive tzdata"

  # run Ansible as the provisioner if the host OS is Unix-like (Linux, OS X), use
  # the shell provisioner otherwise - the end result is the same in both cases
  if ENV["OS"].to_s.include? "Windows" or ENV["OS"].to_s.include? "MINGW32"
    config.vm.provision "shell" do |sh|
      sh.path = "provisioning/windows.sh"
      sh.args = "provisioning/playbook.yml provisioning/inventory"
    end
  else
    config.vm.provision :ansible do |ansible|
      ansible.playbook = "provisioning/playbook.yml"
    end
  end

end
